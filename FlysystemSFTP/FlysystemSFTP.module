<?php namespace ProcessWire;
/**
 * Flysystem FileField (0.0.1)
 * FieldtypeFile using league/flysystem
 * 
 * @author Benjamin Milde
 * 
 * ProcessWire 2.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 * 
 * http://www.processwire.com
 * http://www.ryancramer.com
 * 
 */
use League\Flysystem\Sftp\SftpAdapter;

class FlysystemSFTP extends FlysystemAbstract {

	/**
	 * @return string Unique key for the adapter
	 */
	protected function key() { return 'sftp'; }

	/**
	 * @return string Label for the adapter
	 */
	protected function label() { return 'SFTP Adapter'; }

	/**
	 * @param InputfieldFieldset $fieldset
	 * @param Field $field
	 * @return void
	 */
	protected function getConfigFields(InputfieldFieldset $fieldset, Field $field){
		$f = $this->modules->get('InputfieldText'); 
		$f->attr('name', 'sftp_path'); 
		$f->label = $this->_('Path');
		$f->value = $field->sftp_path;
		$fieldset->add($f);

		$f = $this->modules->get('InputfieldText'); 
		$f->attr('name', 'sftp_host'); 
		$f->label = $this->_('Host');
		$f->value = $field->sftp_host;
		$f->columnWidth = 40;
		$fieldset->add($f);

		$f = $this->modules->get('InputfieldText'); 
		$f->attr('name', 'sftp_port'); 
		$f->label = $this->_('Port');
		$f->value = $field->sftp_port ?: 22;
		$f->columnWidth = 20;
		$fieldset->add($f);

		$f = $this->modules->get('InputfieldText'); 
		$f->attr('name', 'sftp_user'); 
		$f->label = $this->_('Username');
		$f->value = $field->sftp_user;
		$f->columnWidth = 40;
		$fieldset->add($f);

		$f = $this->modules->get('InputfieldText'); 
		$f->attr('name', 'sftp_password'); 
		$f->label = $this->_('Password');
		$f->value = $field->sftp_password;
		$f->columnWidth = 50;
		$fieldset->add($f);

		$f = $this->modules->get('InputfieldText'); 
		$f->attr('name', 'sftp_keyfile'); 
		$f->label = $this->_('Private Key Path');
		$f->value = $field->sftp_keyfile;
		$f->columnWidth = 50;
		$fieldset->add($f);
	}

	/**
	 * @param Field $field
	 * @return \League\Flysystem\AdapterInterface
	 */
	public function constructAdapter(Field $field){
		return new SftpAdapter([
			'host' => $field->sftp_host,
			'port' => $field->sftp_port ?: 22,
			'username' => $field->sftp_user,
			'password' => $field->sftp_password,
			'privateKey' => $field->sftp_keyfile,
			'root' => $field->sftp_path,
			'timeout' => 15,
		]);
	}

}